# Описание параметров ВМ
MACHINES = {

:app01 => {
  :box_name => "ubuntu/jammy64",
  :vm_name => "app01",
  :cpus => 2,
  :memory => 1024,
  :ip => "192.168.57.14",
},
:app02 => {
  :box_name => "ubuntu/jammy64",
  :vm_name => "app02",
  :cpus => 2,
  :memory => 1024,
  :ip => "192.168.57.15",
},
:web01 => {
  :box_name => "ubuntu/jammy64",
  :vm_name => "web01",
  :cpus => 2,
  :memory => 1024,
  :ip => "192.168.57.16",
  :nat_ip => "192.168.3.231",
},
:web02 => {
  :box_name => "ubuntu/jammy64",
  :vm_name => "web02",
  :cpus => 2,
  :memory => 1024,
  :ip => "192.168.57.17",
  :nat_ip => "192.168.3.232",
},
:monitor => {
  :box_name => "ubuntu/jammy64",
  :vm_name => "monitor",
  :cpus => 2,
  :memory => 2048,
  :ip => "192.168.57.18",
},
  :db01 => {
    :box_name => "ubuntu/jammy64",
    :vm_name => "db01",
    :cpus => 2,
    :memory => 1024,
    :ip => "192.168.57.11",
  },
  :db02 => {
    :box_name => "ubuntu/jammy64",
    :vm_name => "db02",
    :cpus => 2,
    :memory => 1024,
    :ip => "192.168.57.12",
  },
  # :db03 => {
  #   :box_name => "ubuntu/jammy64",
  #   :vm_name => "db03",
  #   :cpus => 2,
  #   :memory => 1024,
  #   :ip => "192.168.57.13",
  # },

}

Vagrant.configure("2") do |config|

  MACHINES.each do |boxname, boxconfig|

    config.vm.define boxname do |box|

      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxconfig[:vm_name]
      box.vm.network "private_network", ip: boxconfig[:ip]
      if boxconfig[:vm_name].include? "web"
        box.vm.network "public_network", ip: boxconfig[:nat_ip],bridge: "enp3s0f1"
          #virtualbox__intnet: "NatNetwork"
      end
      box.vm.provider "virtualbox" do |v|
        v.memory = boxconfig[:memory]
        v.cpus = boxconfig[:cpus]
      end

      # Запуск ansible-playbook
      if boxconfig[:vm_name] == "db02"
       box.vm.provision "ansible" do |ansible|
        ansible.playbook = "ansible/provision.yml"
        ansible.inventory_path = "ansible/hosts"
        ansible.host_key_checking = "false"
        ansible.limit = "all"
       end
      end
    end
  end
end
