   # code: language=ansible
- name: Set variable of patroni
  when: use_patroni
  block:
    - name: set postgresql_db_address
      ansible.builtin.set_fact:
        postgresql_db_address: "{{ keepalived_ip }}"
        postgresql_db_port: "{{ postgresql_cluster_port }}"


- name: App | Deploy app
  when: 'inventory_hostname in groups["app"]'
  block:
  - name: App | Install pakage | apt
    ansible.builtin.apt:
      name:
        - python3-pip
        - acl
      state: present
      update_cache: true
    when: 'inventory_hostname in groups["app"]'

  - name: App | Create a user '{{ gunicorn_user }}'
    ansible.builtin.user:
      name: "{{ gunicorn_user }}"
      shell: /bin/bash
      create_home: true
      password: "!"

  - name: App | clone branch | git
    ansible.builtin.git:
      repo: "{{ app_git_repo }}"
      dest: "{{ app_base_path }}"
      force: true
    become_user: "{{ gunicorn_user }}"
    notify: Restart gunicorn

  - name: App | Install specified python requirements | pip
    ansible.builtin.pip:
      requirements: "{{ app_base_path }}/requirements.txt"
    become_user: "{{ gunicorn_user }}"

  - name: Gunicorn | Install gunicorn | pip
    ansible.builtin.pip:
      name: "gunicorn"
    become_user: "{{ gunicorn_user }}"

  - name: Gunicorn | Create gunicorn service | systemd
    ansible.builtin.template:
      src: gunicorn.services.j2
      dest: "/etc/systemd/system/gunicorn.service"
      owner: root
      group: root
      mode: '0600'
    notify: Restart gunicorn

  - name: Gunicorn | Create gunicorn socket | systemd
    ansible.builtin.template:
      src: gunicorn.socket.j2
      dest: "/etc/systemd/system/gunicorn.socket"
      owner: root
      group: root
      mode: '0600'
    notify: Restart gunicorn

  - name: App | Create settings.py  | config
    ansible.builtin.template:
      src: settings.py.j2
      dest: "{{ app_settings_path }}"
      owner: "{{ gunicorn_user }}"
      group: "{{ gunicorn_user }}"
      mode: '0600'
    notify: Restart gunicorn

  - name: Enable service gunicorn and ensure it is not masked
    ansible.builtin.systemd_service:
      name: "{{ item }}"
      enabled: true
      masked: false
    loop:
      - gunicorn.service
      - gunicorn.socket
