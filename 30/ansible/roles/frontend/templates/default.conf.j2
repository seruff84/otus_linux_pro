upstream backend {
{% for ip in app_ips %}
	server {{ip}}:{{frontend_port}};
{% endfor %}
}
include prometheus_all.conf;

# generated 2024-08-05, Mozilla Guideline v5.7, nginx 1.17.7, OpenSSL 1.1.1k, intermediate configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.17.7&config=intermediate&openssl=1.1.1k&guideline=5.7


server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location / {
        return 301 https://$host$request_uri;
    }
    location =/p8s {
            prometheus all;
    }
}

server {
    listen 443 ssl ;
    listen [::]:443 ssl ;
    server_name : {{ angie_server_name }}
    http2  on;
    ssl_certificate {{angie_ssl_certificate}};
    ssl_certificate_key {{angie_ssl_certificate_key}};
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /etc/angie/ssl/dhparam
    ssl_dhparam {{angie_ssl_dhparam}};

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    #ssl_trusted_certificate /path/to/root_CA_cert_plus_intermediates;

    # replace with the IP address of your resolver
    resolver 127.0.0.1;

        location / {
                try_files $uri @proxy_to_app;
        }

        location @proxy_to_app {

                proxy_pass              http://backend;
                proxy_set_header        X-Real-IP       $remote_addr;
                proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header        Host            $host;
                proxy_set_header        HTTPS           YES;
                proxy_set_header        X-Forwarded-Proto $scheme;
                add_header              Front-End-Https   on;
        }
}
server {
    listen      127.0.0.1:80;
    server_name  localhost;
    location /status/ {
        api     /status/;
        allow   127.0.0.1;
        deny    all;
    }
}