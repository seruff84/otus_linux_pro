scope: {{ patroni_scope }}
name: {{ inventory_hostname }}

log:
  level: WARNING
  format: '%(asctime)s %(levelname)s: %(message)s'
  dateformat: ''
  max_queue_size: 1000
  dir: /var/log/postgresql
  file_num: 4
  file_size: 25000000
  loggers:
    postgres.postmaster: WARNING
    urllib3: DEBUG

restapi:
  listen: 0.0.0.0:8008
  connect_address: {{ inventory_hostname }}:8008

etcd:
  hosts:
{% for etcd_ip in etcd_ips %}
  - {{ etcd_ip }}:2379
{% endfor %}

bootstrap:
  # this section will be written into Etcd:/<namespace>/<scope>/config after initializing new cluster
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
#    master_start_timeout: 300
#    synchronous_mode: false
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:
        wal_level: replica
        hot_standby: "on"
        logging_collector: 'on'
        max_wal_senders: 5
        max_replication_slots: 5
        wal_log_hints: "on"
        #archive_mode: "on"
        #archive_timeout: 600
        #archive_command: "cp -f %p /home/postgres/archived/%f"
        #recovery_conf:
        #restore_command: cp /home/postgres/archived/%f %p
# {% for line in  pgtun_postgresql_setting %}
#         {{line}}
# {% endfor %}

  # some desired options for 'initdb'
  initdb:  # Note: It needs to be a list (some options need values, others are switches)
  - encoding: UTF8
  - data-checksums

  pg_hba:  # Add following lines to pg_hba.conf after running 'initdb'
  - host replication replicator {{ localnet[0] }} md5
  - host replication replicator 127.0.0.1/32 trust
  - host all all {{ localnet[0] }} md5
  - host all all 0.0.0.0/0 md5
#  - hostssl all all 0.0.0.0/0 md5

  # Additional script to be launched after initial cluster creation (will be passed the connection URL as parameter)
# post_init: /usr/local/bin/setup_cluster.sh
  # Some additional users users which needs to be created after initializing new cluster
  users:
    postgres:
      password: {{ patroni_postgres_password }}
      options:
        - createrole
        - createdb
    replicator:
      password: {{ patroni_replicator_password }}
      options:
        - replication

postgresql:
  listen: 0.0.0.0:5432
  connect_address: {{ inventory_hostname }}:5432
  data_dir: "/var/lib/postgresql/14/main"
  bin_dir: "/usr/lib/postgresql/14/bin"
  pgpass: "/var/lib/postgresql/.pgpass"
  authentication:
    replication:
      username: replicator
      password: {{ patroni_replicator_password }}
    superuser:
      username: postgres
      password: {{ patroni_postgres_password }}
  parameters:
    unix_socket_directories: '/var/run/postgresql'
    #archive_mode: on
    #archive_command: /usr/local/bin/copy_wal.sh %p %f
    #archive_timeout: 600
    unix_socket_directories: '/var/run/postgresql'
    port: 5432

watchdog:
  mode: required # Allowed values: off, automatic, required
  device: /dev/watchdog
  safety_margin: 5

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false
